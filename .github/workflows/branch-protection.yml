name: Branch Protection

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  protect:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Add timeout to prevent hanging
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Changed from 3.x to 3.11 for better compatibility
          cache: 'pip'  # Enable pip caching
          
      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel pip-tools
          pip config set global.only-binary :all:
          pip-compile --output-file=requirements.lock requirements.txt
          pip install -r requirements.lock --verbose
        timeout-minutes: 5  # Add timeout for this step
          
      - name: Install test dependencies
        run: |
          pip install --only-binary :all: pytest pytest-cov flake8 bandit black isort mypy --verbose
        timeout-minutes: 3  # Add timeout for this step
          
      - name: Create necessary directories
        run: |
          mkdir -p src tests
          
      - name: Check code formatting
        run: |
          if [ -d "src" ]; then
            black --check src/
          fi
          if [ -d "tests" ]; then
            black --check tests/
          fi
          if [ -d "src" ]; then
            isort --check-only src/
          fi
          if [ -d "tests" ]; then
            isort --check-only tests/
          fi
          
      - name: Type checking
        run: |
          if [ -d "src" ]; then
            mypy src/
          fi
          if [ -d "tests" ]; then
            mypy tests/
          fi
          
      - name: Run tests with coverage
        id: test
        run: |
          if [ -d "tests" ]; then
            pytest --cov=src/ --cov-report=xml tests/
          else
            echo "No tests directory found. Skipping tests."
          fi
          
      - name: Check code style
        run: |
          if [ -d "src" ]; then
            flake8 src/
          fi
          if [ -d "tests" ]; then
            flake8 tests/
          fi
          
      - name: Security scan
        run: |
          if [ -d "src" ]; then
            bandit -r src/ -c pyproject.toml
          fi
          
      - name: Upload coverage report
        if: success() && steps.test.outcome == 'success'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true 